
Testing and Evaluation
What is Testing?
After training, you’ll evaluate your model’s performance using the test dataset (which was not used during training).
Why Test? Testing gives you an idea of how well your model generalizes to new, unseen data.
Key Testing Concepts:
Model Evaluation Mode:
Before testing, set the model to "evaluation mode" (model.eval()) to disable certain features that are only needed during training (like dropout layers).
Accuracy Calculation:
During testing, for each batch of images:
Perform a forward pass through the network.
Get the predictions and compare them with the true labels.
Track the number of correct predictions.
Calculate accuracy as the ratio of correct predictions to total predictions.
Accuracy Formula:
Accuracy=Correct PredictionsTotal Predictions×100\text{Accuracy} = \frac{\text{Correct Predictions}}{\text{Total Predictions}} \times 100Accuracy=Total PredictionsCorrect Predictions​×100
Confusion Matrix (Optional but Useful):
After testing, you can also use a confusion matrix to see how well your model is performing across all classes. This helps identify if the model has a bias towards certain classes.
Common Pitfalls in Testing:
Overfitting: This happens when the model performs very well on the training data but poorly on the test data. This indicates the model has learned specific details of the training set that don’t generalize well to new data.
Solution: Regularization techniques (like dropout) or adding more data (augmentation) can help prevent overfitting.
Underfitting: This happens when the model performs poorly on both the training and test sets. This could indicate that the model is too simple or not trained long enough.
Solution: Increase model complexity (e.g., more layers, more neurons) or train for more epochs.
Improving Testing Performance:
Use data augmentation (random flips, rotations, cropping) during training to improve generalization.
Try fine-tuning hyperparameters (like the learning rate and batch size) or try a different architecture (deeper networks, more layers).


